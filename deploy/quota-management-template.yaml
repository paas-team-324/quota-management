apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: quota-management
  annotations:
    description: "OpenShift application for easy management of resources for projects located within the deployed cluster."
objects:
- apiVersion: oauth.openshift.io/v1
  grantMethod: auto
  kind: OAuthClient
  metadata:
    name: ${CLIENT_ID}
  redirectURIs:
  - https://quota-management.${ROUTER_CANONICAL_HOSTNAME}
- apiVersion: user.openshift.io/v1
  kind: Group
  metadata:
    name: ${QUOTA_MANAGERS_GROUP}
  users: []
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: quota-scheme
    namespace: ${NAMESPACE}
  data:
    scheme.json: |
      {
          "compute": {
              "pods": {
                  "name": "Pods",
                  "units": "",
                  "regex": "^\\d+$",
                  "regex_description": "Must be a whole non-negative number"
              },
              "requests.cpu": {
                  "name": "CPU Cores",
                  "units": "",
                  "regex": "^\\d*\\.?\\d*$",
                  "regex_description": "Must be a floating point non-negative number"
              },
              "requests.memory": {
                  "name": "Memory",
                  "units": [ "Gi", "Mi" ],
                  "regex": "^\\d*\\.?\\d*$",
                  "regex_description": "Must be a floating point non-negative number"
              }
          },
          "storage": {
              "requests.storage": {
                  "name": "Storage",
                  "units": "Gi",
                  "regex": "^\\d*\\.?\\d*$",
                  "regex_description": "Must be a floating point non-negative number"
              },
              "persistentvolumeclaims": {
                  "name": "Persistent Volume Claims",
                  "units": "",
                  "regex": "^\\d+$",
                  "regex_description": "Must be a whole non-negative number"
              }
          }
      }
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: quota-manager
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: quota-manager
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - list
    - patch
  - apiGroups:
    - ""
    resources:
    - resourcequotas
    verbs:
    - get
    - patch
  - apiGroups:
    - user.openshift.io
    resources:
    - groups
    resourceNames:
    - ${QUOTA_MANAGERS_GROUP}
    verbs:
    - get
  - apiGroups:
    - project.openshift.io
    resources:
    - projectrequests
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: quota-manager
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: quota-manager
  subjects:
  - kind: ServiceAccount
    name: quota-manager
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: quota-manager-admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: quota-manager
    namespace: ${NAMESPACE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: quota-management
    namespace: ${NAMESPACE}
    labels:
      app: quota-management
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: quota-management
    template:
      metadata:
        labels:
          app: quota-management
      spec:
        serviceAccountName: quota-manager
        containers:
        - name: quota-management
          image: ${IMAGE}
          ports:
          - containerPort: 5000
          resources:
            requests:
              memory: "64Mi"
              cpu: ".1"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
          env:
          - name: OAUTH_ENDPOINT
            value: "https://${OAUTH_ENDPOINT}"
          - name: OAUTH_CLIENT_ID
            value: "${CLIENT_ID}"
          - name: QUOTA_SCHEME_FILE
            value: "/app/scheme.json"
          - name: MANAGED_NAMESPACE_LABEL_NAME
            value: "${MANAGED_NAMESPACE_LABEL_NAME}"
          - name: MANAGED_NAMESPACE_LABEL_VALUE
            value: "${MANAGED_NAMESPACE_LABEL_VALUE}"
          - name: QUOTA_MANAGERS_GROUP
            value: "${QUOTA_MANAGERS_GROUP}"
          - name: USERNAME_FORMATTING
            value: "${USERNAME_FORMATTING}"
          volumeMounts:
          - name: scheme
            mountPath: "/app/scheme.json"
            subPath: "scheme.json"
            readOnly: true
          imagePullPolicy: "${PULL_POLICY}"
        volumes:
        - name: scheme
          configMap:
            name: quota-scheme
- apiVersion: v1
  kind: Service
  metadata:
    name: quota-management
    namespace: ${NAMESPACE}
  spec:
    selector:
      app: quota-management
    ports:
      - protocol: TCP
        port: 5000
        targetPort: 5000
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: quota-management
    namespace: ${NAMESPACE}
  spec:
    host: quota-management.${ROUTER_CANONICAL_HOSTNAME}
    to:
      kind: Service
      name: quota-management
      weight: 100
    port:
      targetPort: 5000
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
parameters:
- description: Namespace in which to deploy the quota management
  name: NAMESPACE
  required: true
- description: Client ID for the UI to use
  value: quota-management
  name: CLIENT_ID
  required: true
- description: Name for the quota managers group
  value: quota-managers
  name: QUOTA_MANAGERS_GROUP
  required: true
- description: Endpoint to use for authentication
  name: OAUTH_ENDPOINT
  required: true
- description: Label name which should be applied to managed namespaces
  value: managed-quota
  name: MANAGED_NAMESPACE_LABEL_NAME
  required: true
- description: Label value which should be applied to managed namespaces
  value: "true"
  name: MANAGED_NAMESPACE_LABEL_VALUE
  required: true
- description: Router's wildcard DNS record
  name: ROUTER_CANONICAL_HOSTNAME
  required: true
- description: Docker image to use
  value: docker.io/vladpbr/quota-management:1.2
  name: IMAGE
  required: true
- description: Pull policy for the image
  value: IfNotPresent
  name: PULL_POLICY
  required: true